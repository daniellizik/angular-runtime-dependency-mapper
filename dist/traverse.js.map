{"version":3,"sources":["../src/traverse.js"],"names":["traverse","tree","recurse","callback","node","list","nextList","childNodes","reduce","acc","child"],"mappings":";;;;;kBAAwBA,Q;AAAT,SAASA,QAAT,CAAkBC,IAAlB,EAAwB;;AAErC,SAAO,SAASC,OAAT,CAAiBC,QAAjB,EAAmD;AAAA,QAAxBC,IAAwB,uEAAjBH,IAAiB;AAAA,QAAXI,IAAW,uEAAJ,EAAI;;AACxD,QAAMC,WAAWH,SAASE,IAAT,EAAeD,IAAf,CAAjB;AACA,QAAIA,KAAKG,UAAT,EAAqB;AACnB,aAAOH,KAAKG,UAAL,CAAgBC,MAAhB,CAAuB,UAACC,GAAD,EAAMC,KAAN,EAAgB;AAC5C,eAAOR,QAAQC,QAAR,EAAkBO,KAAlB,EAAyBD,GAAzB,CAAP;AACD,OAFM,EAEJH,QAFI,CAAP;AAGD,KAJD,MAIO;AACL,aAAOA,QAAP;AACD;AACF,GATD;AAWD","file":"traverse.js","sourcesContent":["export default function traverse(tree) {\r\n\r\n  return function recurse(callback, node = tree, list = []) {\r\n    const nextList = callback(list, node)\r\n    if (node.childNodes) {\r\n      return node.childNodes.reduce((acc, child) => {\r\n        return recurse(callback, child, acc)\r\n      }, nextList)\r\n    } else {\r\n      return nextList\r\n    }\r\n  }\r\n\r\n}\r\n"]}