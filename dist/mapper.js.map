{"version":3,"sources":["../src/mapper.js"],"names":["angular","modules","dependencyFilter","Promise","resolve","reject","dependencies","reduce","acc","moduleName","reduceModules","map","mapDependencies","mapDependents","module","_invokeQueue","_configBlocks","_runBlocks","requires","configBlocks","list","args","res","reduceConfigBlocks","invokes","reduceInvokeQueue","moduleDependencies","filter","test","name","dependencyName","obj","index","type","htmlAst","definition","template","node","nodeName","toLowerCase","replace","attrKeys","attrs","a","mappedIndices","o","i","componentName","hasDependency","indexOf","dependents","isDependedOn","templateRegex","ast","toString","stub","properties","find","n","key","code","Function","base","isComponent","isDirective","length","slice","pop"],"mappings":";;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AACA;;;;;;;;AAEA;;;;;;;kBAOe,UAACA,OAAD,EAAUC,OAAV;AAAA,MAAmBC,gBAAnB,uEAAsC,IAAtC;AAAA,SAA+C,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7F,QAAMC,eAAeL,QAClBM,MADkB,CACX,UAACC,GAAD,EAAMC,UAAN;AAAA,aAAqBC,cAAcF,GAAd,EAAmBC,UAAnB,EAA+BT,OAA/B,EAAwCE,gBAAxC,CAArB;AAAA,KADW,EACqE,EADrE,EAElBS,GAFkB,CAEdC,eAFc,EAGlBD,GAHkB,CAGdE,aAHc,CAArB;AAIAT,YAAQE,YAAR;AACD,GAN6D,CAA/C;AAAA,C;;AAQf;;;;;;;;AAMA,SAASI,aAAT,CAAuBF,GAAvB,EAA4BC,UAA5B,EAAwCT,OAAxC,EAAiDE,gBAAjD,EAAmE;AAAA,wBACHF,QAAQc,MAAR,CAAeL,UAAf,CADG;AAAA,MACzDM,YADyD,mBACzDA,YADyD;AAAA,MAC3CC,aAD2C,mBAC3CA,aAD2C;AAAA,MAC5BC,UAD4B,mBAC5BA,UAD4B;AAAA,MAChBC,QADgB,mBAChBA,QADgB;;AAEjE,MAAMC,eAAeH,cAAcT,MAAd,CAAqB,UAACa,IAAD,EAAOC,IAAP,EAAgB;AACxD,QAAMC,MAAMC,mBAAmBd,UAAnB,EAA+B,QAA/B,EAAyCY,KAAK,CAAL,EAAQ,CAAR,CAAzC,CAAZ;AACA,WAAOC,mCAAWF,IAAX,IAAiBE,GAAjB,KAAyBF,IAAhC;AACD,GAHoB,EAGlB,EAHkB,CAArB;AAIA,MAAMI,UAAUT,aAAaR,MAAb,CAAoB,UAACa,IAAD,EAAOC,IAAP,EAAgB;AAClD,QAAMC,MAAMG,kBAAkBhB,UAAlB,EAA8BY,KAAK,CAAL,CAA9B,EAAuCA,KAAK,CAAL,EAAQ,CAAR,CAAvC,EAAmDA,KAAK,CAAL,CAAnD,CAAZ;AACA,WAAOC,mCAAWF,IAAX,IAAiBE,GAAjB,KAAyBF,IAAhC;AACD,GAHe,EAGb,EAHa,CAAhB;AAIA;AACA,MAAMM,qBAAqBR,SACxBS,MADwB,CACjB;AAAA,WAAQzB,iBAAiB0B,IAAjB,CAAsBC,IAAtB,CAAR;AAAA,GADiB,EAExBtB,MAFwB,CAEjB,UAACa,IAAD,EAAOU,cAAP;AAAA,WAA0BpB,cAAcU,IAAd,EAAoBU,cAApB,EAAoC9B,OAApC,EAA6CE,gBAA7C,CAA1B;AAAA,GAFiB,EAEyE,EAFzE,CAA3B;AAGA,sCACKM,GADL,sBAEKW,YAFL,sBAGKK,OAHL,sBAIKE,kBAJL;AAMD;;AAED;;;;;;;AAOA,SAASd,eAAT,CAAyBmB,GAAzB,EAA8BC,KAA9B,EAAqCZ,IAArC,EAA2C;AACzC,MAAI,sBAAsBQ,IAAtB,CAA2BG,IAAIE,IAA/B,CAAJ,EAA0C;AACxC;AACA,QAAMC,UAAU,kBAAUH,IAAII,UAAJ,CAAeC,QAAzB,CAAhB;AACA;AACA,QAAM9B,eAAe,wBAAS4B,OAAT,EAAkB,UAAC1B,GAAD,EAAM6B,IAAN,EAAe;AACpD;AACA,UAAMC,WAAWD,KAAKC,QAAL,CAAcC,WAAd,GAA4BC,OAA5B,CAAoC,IAApC,EAA0C,EAA1C,CAAjB;AACA;AACA,UAAMC,WAAW,CAACJ,KAAKK,KAAL,IAAc,EAAf,EAAmB/B,GAAnB,CAAuB;AAAA,eAAKgC,EAAEd,IAAF,CAAOU,WAAP,GAAqBC,OAArB,CAA6B,IAA7B,EAAmC,EAAnC,CAAL;AAAA,OAAvB,CAAjB;AACA,UAAMI,gBAAgBxB,KAAKb,MAAL,CAAY,UAACC,GAAD,EAAMqC,CAAN,EAASC,CAAT,EAAe;AAC/C;AACA,YAAMC,gBAAgB,CAACF,EAAEhB,IAAF,IAAU,EAAX,EAAeU,WAAf,EAAtB;AACA,YAAMS,gBAAgBV,aAAaS,aAAb,IAA8BN,SAASQ,OAAT,CAAiBF,aAAjB,IAAkC,CAAC,CAAvF;AACA,eAAOC,6CAAqBxC,GAArB,IAA0BsC,CAA1B,KAAgCtC,GAAvC;AACD,OALqB,EAKnB,EALmB,CAAtB;AAMA,0CAAYA,GAAZ,sBAAoBoC,aAApB;AACD,KAZoB,CAArB;AAaA,wBAAYb,GAAZ,IAAiBzB,0BAAjB;AACD,GAlBD,MAkBO;AACL,WAAOyB,GAAP;AACD;AACF;;AAED;;;;;;;AAOA,SAASlB,aAAT,CAAuBkB,GAAvB,EAA4BC,KAA5B,EAAmCZ,IAAnC,EAAyC;AACvC,MAAM8B,aAAa9B,KAAKb,MAAL,CAAY,UAACC,GAAD,EAAMqC,CAAN,EAASC,CAAT,EAAe;AAC5C,QAAMK,eAAe,CAACN,EAAEvC,YAAF,IAAkB,EAAnB,EAAuB2C,OAAvB,CAA+BjB,KAA/B,IAAwC,CAAC,CAA9D;AACA,WAAO,CAACmB,YAAD,GAAgB3C,GAAhB,gCAA2BA,GAA3B,IAAgCsC,CAAhC,EAAP;AACD,GAHkB,EAGhB,EAHgB,CAAnB;AAIA,sBAAYf,GAAZ,IAAiBmB,sBAAjB;AACD;;AAED;;;;;;;;;;;;;AAaA;AACA,SAAS3B,kBAAT,CAA4Bd,UAA5B,EAAwCwB,IAAxC,EAA8CE,UAA9C,EAA0D;AACxD,MAAMiB,gBAAgB,mBAAtB;AACA,MAAMC,MAAM,oBAAQlB,WAAWmB,QAAX,EAAR,CAAZ;AACA,MAAMC,OAAO,0BAAWF,GAAX,EAAgB,UAAChB,IAAD,EAAU;AACrC,QAAIA,IAAJ,EAAU;AACR;AACA,UAAIA,KAAKJ,IAAL,KAAc,kBAAlB,EAAsC;AACpC,YAAII,KAAKmB,UAAL,CAAgBC,IAAhB,CAAqB;AAAA,iBAAKL,cAAcxB,IAAd,CAAmB8B,EAAEC,GAAF,CAAM9B,IAAzB,CAAL;AAAA,SAArB,CAAJ,EAA+D;AAC7D,iBAAOQ,IAAP;AACD;AACF;AACF;AACF,GATY,CAAb;AAUA;AACA,MAAMuB,OAAO,CAACL,IAAD,GAAQ,EAAR,GAAa,IAAIM,QAAJ,aAAuB,yBAASN,IAAT,CAAvB,GAA1B;AACA,SAAO,EAAEzC,QAAQL,UAAV,EAAsBwB,UAAtB,EAA4BE,YAAYyB,IAAxC,EAAP;AACD;;AAED;;;;;;;;;;;;;AAaA,SAASnC,iBAAT,CAA2BhB,UAA3B,EAAuCwB,IAAvC,EAA6CJ,IAA7C,EAA4D;AAAA,oCAANR,IAAM;AAANA,QAAM;AAAA;;AAC1D,MAAMc,aAAad,KAAK,CAAL,EAAQ,CAAR,CAAnB;AACA,MAAMyC,OAAO,EAAE7B,UAAF,EAAQJ,UAAR,EAAcf,QAAQL,UAAtB,EAAb;AACA,MAAMsD,cAAc9B,SAAS,WAA7B;AACA,MAAM+B,cAAc/B,SAAS,WAA7B;AACA,MAAI8B,WAAJ,EACE,oBAAYD,IAAZ,IAAkB3B,sBAAlB,IADF,KAEK,IAAI6B,eAAe,OAAO7B,UAAP,KAAsB,UAAzC,EACH,oBAAY2B,IAAZ,IAAkB3B,YAAYA,YAA9B,IADG,KAEA,IAAI6B,eAAe7B,WAAW8B,MAAX,KAAsB,CAAzC,EACH,oBAAYH,IAAZ,IAAkB3B,YAAYA,WAAW,CAAX,GAA9B,IADG,KAEA,IAAI6B,eAAe7B,WAAW8B,MAAX,GAAoB,CAAvC,EACH,oBAAYH,IAAZ,IAAkB3B,YAAYA,WAAW+B,KAAX,CAAiB,CAAC,CAAlB,EAAqBC,GAArB,GAA2BhC,WAAW+B,KAAX,CAAiB,CAAjB,EAAoB,CAAC,CAArB,CAA3B,CAA9B;AACH","file":"mapper.js","sourcesContent":["import { parse as parseHtml } from 'parse5'\r\nimport { parse as parseJs } from 'esprima'\r\nimport { generate } from 'escodegen'\r\nimport deepsearch from './deepsearch'\r\nimport traverse from './traverse'\r\n\r\n/**\r\n * entry point for dependency mapper\r\n * @param {object} angular - angular object\r\n * @param {array<string>} modules - list of module names to analyze\r\n * @param {regex} dependencyFilter - filter to exclude 3rd party dependencies\r\n * @return {array} list of application dependencies\r\n */\r\nexport default (angular, modules, dependencyFilter = /./g) => new Promise((resolve, reject) => {\r\n  const dependencies = modules\r\n    .reduce((acc, moduleName) => reduceModules(acc, moduleName, angular, dependencyFilter), [])\r\n    .map(mapDependencies)\r\n    .map(mapDependents)\r\n  resolve(dependencies)\r\n})\r\n\r\n/**\r\n * reduce callback\r\n * @param {array} acc - accumulator, should be array of objects\r\n * @param {string} moduleName - name of angular module\r\n * @return {array} reduce accumulator\r\n */\r\nfunction reduceModules(acc, moduleName, angular, dependencyFilter) {\r\n  const { _invokeQueue, _configBlocks, _runBlocks, requires } = angular.module(moduleName)\r\n  const configBlocks = _configBlocks.reduce((list, args) => {\r\n    const res = reduceConfigBlocks(moduleName, 'config', args[2][0])\r\n    return res ? [ ...list, res ] : list\r\n  }, [])\r\n  const invokes = _invokeQueue.reduce((list, args) => {\r\n    const res = reduceInvokeQueue(moduleName, args[1], args[2][0], args[2])\r\n    return res ? [ ...list, res ] : list\r\n  }, [])\r\n  // each required module can be used with angular.module() to get nested dependency tree\r\n  const moduleDependencies = requires\r\n    .filter(name => dependencyFilter.test(name))\r\n    .reduce((list, dependencyName) => reduceModules(list, dependencyName, angular, dependencyFilter), [])\r\n  return [\r\n    ...acc,\r\n    ...configBlocks,\r\n    ...invokes,\r\n    ...moduleDependencies\r\n  ]\r\n}\r\n\r\n/**\r\n * map callback\r\n * @param {object} obj - generated from reduceModules\r\n * @param {number} index - position from list generated by reduceModules\r\n * @param {array} list - reduceModules return array\r\n * @return {object} object with dependency array, each item in array is list array index\r\n */\r\nfunction mapDependencies(obj, index, list) {\r\n  if (/component|directive/.test(obj.type)) {\r\n    // todo: if templateUrl, Promise.props request and then parse response\r\n    const htmlAst = parseHtml(obj.definition.template)\r\n    // for each node, find matching elements by index in entire list\r\n    const dependencies = traverse(htmlAst)((acc, node) => {\r\n      // need to match nodename for restrict E\r\n      const nodeName = node.nodeName.toLowerCase().replace(/-/g, '')\r\n      // or filters attrs for restrict A\r\n      const attrKeys = (node.attrs || []).map(a => a.name.toLowerCase().replace(/-/g, ''))\r\n      const mappedIndices = list.reduce((acc, o, i) => {\r\n        // run, config, value, etc. are not registered with a name\r\n        const componentName = (o.name || '').toLowerCase()\r\n        const hasDependency = nodeName === componentName || attrKeys.indexOf(componentName) > -1\r\n        return hasDependency ? [ ...acc, i ] : acc\r\n      }, [])\r\n      return [ ...acc, ...mappedIndices ]\r\n    })\r\n    return { ...obj, dependencies }\r\n  } else {\r\n    return obj\r\n  }\r\n}\r\n\r\n/**\r\n * goes back through list and maps dependent objects\r\n * @param {object} obj - generated from reduceModules\r\n * @param {number} index - position from list generated by reduceModules\r\n * @param {array} list - reduceModules return array\r\n * @return {object} object with dependents array, each item in array is list array index\r\n */\r\nfunction mapDependents(obj, index, list) {\r\n  const dependents = list.reduce((acc, o, i) => {\r\n    const isDependedOn = (o.dependencies || []).indexOf(index) > -1\r\n    return !isDependedOn ? acc : [ ...acc, i]\r\n  }, [])\r\n  return { ...obj, dependents }\r\n}\r\n\r\n/**\r\n * Finds all registered angular services for given module\r\n *\r\n * @param {string} moduleName - name of module\r\n * @param {string} type - type of service\r\n * @param {name} type - name of service\r\n * @param {arguments} ...args - original arguments supplied to service\r\n * @return {array} list of services registered to module\r\n *   @property {string} module - name of parent module\r\n *   @property {string} type - type of angular service\r\n *   @property {string} definition - config function definition\r\n */\r\n\r\n// todo: this needs to be single obj in array, but have multiple definitions\r\nfunction reduceConfigBlocks(moduleName, type, definition) {\r\n  const templateRegex = /^template(url)?$/i\r\n  const ast = parseJs(definition.toString())\r\n  const stub = deepsearch(ast)((node) => {\r\n    if (node) {\r\n      // todo: too optimistic, user might be defining via dot notation\r\n      if (node.type === 'ObjectExpression') {\r\n        if (node.properties.find(n => templateRegex.test(n.key.name))) {\r\n          return node\r\n        }\r\n      }\r\n    }\r\n  })\r\n  // ehhh....\r\n  const code = !stub ? {} : new Function(`return ${generate(stub)}`)()\r\n  return { module: moduleName, type, definition: code }\r\n}\r\n\r\n/**\r\n * Finds all registered angular services for given module\r\n *\r\n * @param {string} moduleName - name of module\r\n * @param {string} type - type of service\r\n * @param {name} type - name of service\r\n * @param {arguments} ...args - original arguments supplied to service\r\n * @return {array} list of services registered to module\r\n *   @property {string} module - name of parent module\r\n *   @property {string} type - type of angular service\r\n *   @property {string} name - name of the service\r\n *   @property {string} definition - if component, directive, or value, the returned object literal\r\n */\r\nfunction reduceInvokeQueue(moduleName, type, name, ...args) {\r\n  const definition = args[0][1]\r\n  const base = { type, name, module: moduleName }\r\n  const isComponent = type === 'component'\r\n  const isDirective = type === 'directive'\r\n  if (isComponent)\r\n    return { ...base, definition }\r\n  else if (isDirective && typeof definition === 'function')\r\n    return { ...base, definition: definition() }\r\n  else if (isDirective && definition.length === 1)\r\n    return { ...base, definition: definition[0]() }\r\n  else if (isDirective && definition.length > 1)\r\n    return { ...base, definition: definition.slice(-1).pop()(definition.slice(0, -1)) }\r\n}\r\n"]}